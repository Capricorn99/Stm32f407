/*
 * 007spi_rxonly_arduino.c
 *
 *  Created on: Mar 16, 2021
 *      Author: Admin
 */

#include "stm32f4xx.h"
#include  <string.h>

void delay(void)
{
	for(uint32_t i = 0 ; i < 500000 ; i ++);
}

void SPI3_GPIOInits(void)
{

	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOB;
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALFN;
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 6;
	SPIPins.GPIO_PinConfig.GPIO_PinoType = GPIO_OP_TYPE_PP;
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;

	//SCLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
	GPIO_Init(&SPIPins);

	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
	GPIO_Init(&SPIPins);

	//MISO
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
	GPIO_Init(&SPIPins);

	//NSS
	SPIPins.pGPIOx = GPIOA;
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
	GPIO_Init(&SPIPins);

}

void SPI3_Inits(void)
{
	SPI_Handle_t SPI3handle;

	SPI3handle.pSPIx = SPI3;
	SPI3handle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
	SPI3handle.SPIConfig.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
	SPI3handle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV8; // sclk 2MHz
	SPI3handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
	SPI3handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
	SPI3handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
	SPI3handle.SPIConfig.SPI_SSM = SPI_SSM_DI; //hardware slave management

	SPI_Init(&SPI3handle);

}

void GPIO_ButtonInit(void)
{
	GPIO_Handle_t GPIOBtn;

	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOA;
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;

	GPIO_Init(&GPIOBtn);

}

int main(void)
{
	char user_data[] ="Hello word ";

	GPIO_ButtonInit();

	//this function is used to initialize the GPIO pins to behave as SPI3 pins
	SPI3_GPIOInits();

	//this function is used to initialize the SPI3 peripheral parameters
	SPI3_Inits();

	/*
	* making SSOE 1 does NSS output enable.
	* The NSS pin is automatically managed by the hardware.
	* i.e when SPE=1 , NSS will be pulled to low
	* and NSS pin will be high when SPE=0
	*/
	SPI_SSOEConfig(SPI3,ENABLE);

	while(1)
	{
		//wait till button is pressed
		while( ! GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) );

		//to avoid button de-bouncing related issues 200ms of delay
		delay();

		//enable the SPI3 peripheral
		SPI_PeripheralControl(SPI3,ENABLE);

		//first send length information
		// Thay doi uint8_t thành 16 or 32 để gửi nhiều kí tự hơn
		uint8_t dataLen = strlen(user_data);
		SPI_SendData(SPI3,&dataLen,1);

		//to send data
		SPI_SendData(SPI3,(uint8_t*)user_data,strlen(user_data));

		//lets confirm SPI is not busy
		while(SPI_GetFlagStatus(SPI3,SPI_BUSY_FLAG));

		//Disable the SPI3 peripheral
		SPI_PeripheralControl(SPI3,DISABLE);
	}
	return 0;
}
